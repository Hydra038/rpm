// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/(auth)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/(auth)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(auth)/logout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/logout">> = Specific
  const handler = {} as typeof import("../../app/(auth)/logout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(auth)/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/signup">> = Specific
  const handler = {} as typeof import("../../app/(auth)/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account">> = Specific
  const handler = {} as typeof import("../../app/account/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/orders">> = Specific
  const handler = {} as typeof import("../../app/admin/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/payment-settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/payment-settings">> = Specific
  const handler = {} as typeof import("../../app/admin/payment-settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/products">> = Specific
  const handler = {} as typeof import("../../app/admin/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/cart/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cart">> = Specific
  const handler = {} as typeof import("../../app/cart/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout">> = Specific
  const handler = {} as typeof import("../../app/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/order-confirmation/[orderId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/order-confirmation/[orderId]">> = Specific
  const handler = {} as typeof import("../../app/order-confirmation/[orderId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products">> = Specific
  const handler = {} as typeof import("../../app/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/track/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/track">> = Specific
  const handler = {} as typeof import("../../app/track/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth">> = Specific
  const handler = {} as typeof import("../../app/api/admin/auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/orders/[orderId]/invoice/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[orderId]/invoice">> = Specific
  const handler = {} as typeof import("../../app/api/admin/orders/[orderId]/invoice/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/orders/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders">> = Specific
  const handler = {} as typeof import("../../app/api/admin/orders/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/payment-settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/payment-settings">> = Specific
  const handler = {} as typeof import("../../app/api/admin/payment-settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/products/bulk/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/products/bulk">> = Specific
  const handler = {} as typeof import("../../app/api/admin/products/bulk/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/products">> = Specific
  const handler = {} as typeof import("../../app/api/admin/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/stats">> = Specific
  const handler = {} as typeof import("../../app/api/admin/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/env-check/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/env-check">> = Specific
  const handler = {} as typeof import("../../app/api/env-check/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/orders/[orderId]/invoice/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders/[orderId]/invoice">> = Specific
  const handler = {} as typeof import("../../app/api/orders/[orderId]/invoice/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/orders/create-test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders/create-test">> = Specific
  const handler = {} as typeof import("../../app/api/orders/create-test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/orders/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders/list">> = Specific
  const handler = {} as typeof import("../../app/api/orders/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/payment-settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/payment-settings">> = Specific
  const handler = {} as typeof import("../../app/api/payment-settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seed-orders/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seed-orders">> = Specific
  const handler = {} as typeof import("../../app/api/seed-orders/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seed/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seed">> = Specific
  const handler = {} as typeof import("../../app/api/seed/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/tracking/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/tracking">> = Specific
  const handler = {} as typeof import("../../app/api/tracking/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
