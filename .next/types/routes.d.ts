// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/account" | "/admin" | "/admin/orders" | "/admin/payment-settings" | "/admin/products" | "/cart" | "/checkout" | "/login" | "/logout" | "/order-confirmation/[orderId]" | "/products" | "/signup" | "/track"
type AppRouteHandlerRoutes = "/api/admin/auth" | "/api/admin/orders" | "/api/admin/orders/[orderId]/invoice" | "/api/admin/payment-settings" | "/api/admin/products" | "/api/admin/products/bulk" | "/api/admin/stats" | "/api/env-check" | "/api/orders/[orderId]/invoice" | "/api/orders/create-test" | "/api/orders/list" | "/api/payment-settings" | "/api/seed" | "/api/seed-orders" | "/api/tracking"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/account": {}
  "/admin": {}
  "/admin/orders": {}
  "/admin/payment-settings": {}
  "/admin/products": {}
  "/api/admin/auth": {}
  "/api/admin/orders": {}
  "/api/admin/orders/[orderId]/invoice": { "orderId": string; }
  "/api/admin/payment-settings": {}
  "/api/admin/products": {}
  "/api/admin/products/bulk": {}
  "/api/admin/stats": {}
  "/api/env-check": {}
  "/api/orders/[orderId]/invoice": { "orderId": string; }
  "/api/orders/create-test": {}
  "/api/orders/list": {}
  "/api/payment-settings": {}
  "/api/seed": {}
  "/api/seed-orders": {}
  "/api/tracking": {}
  "/cart": {}
  "/checkout": {}
  "/login": {}
  "/logout": {}
  "/order-confirmation/[orderId]": { "orderId": string; }
  "/products": {}
  "/signup": {}
  "/track": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
